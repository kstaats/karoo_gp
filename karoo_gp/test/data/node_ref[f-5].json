{
    "node_type": "operator",
    "tree_type": "f",
    "parent": null,
    "children": "[<Node: <NodeData label='**' type=operator>>, <Node: <NodeData label='-' type=operator>>]",
    "repr": "<Node: <NodeData label='/' type=operator>>",
    "parse": "((((1)**((2)if((a)>=(b))else(abs(b))))**(((sqrt(c))-(square(2)))if((3)>(square(a)))else(3)))/((3)-((sqrt((2)*(1)))*((1)-((c)-(3))))))",
    "display": "/\n\u251c\u2574**\n\u2502 \u251c\u2574**\n\u2502 \u2502 \u251c\u25741\n\u2502 \u2502 \u2514\u2574if\n\u2502 \u2502   \u251c\u25742\n\u2502 \u2502   \u251c\u2574>=\n\u2502 \u2502   \u2502 \u251c\u2574a\n\u2502 \u2502   \u2502 \u2514\u2574b\n\u2502 \u2502   \u2514\u2574abs\n\u2502 \u2502     \u2514\u2574b\n\u2502 \u2514\u2574if\n\u2502   \u251c\u2574-\n\u2502   \u2502 \u251c\u2574sqrt\n\u2502   \u2502 \u2502 \u2514\u2574c\n\u2502   \u2502 \u2514\u2574square\n\u2502   \u2502   \u2514\u25742\n\u2502   \u251c\u2574>\n\u2502   \u2502 \u251c\u25743\n\u2502   \u2502 \u2514\u2574square\n\u2502   \u2502   \u2514\u2574a\n\u2502   \u2514\u25743\n\u2514\u2574-\n  \u251c\u25743\n  \u2514\u2574*\n    \u251c\u2574sqrt\n    \u2502 \u2514\u2574*\n    \u2502   \u251c\u25742\n    \u2502   \u2514\u25741\n    \u2514\u2574-\n      \u251c\u25741\n      \u2514\u2574-\n        \u251c\u2574c\n        \u2514\u25743\n",
    "depth": 5,
    "height": 0,
    "n_children": 33,
    "n_cols": 16,
    "second_child": "((1)**((2)if((a)>=(b))else(abs(b))))",
    "set_child": "((((a)+(b))**(((sqrt(c))-(square(2)))if((3)>(square(a)))else(3)))/((3)-((sqrt((2)*(1)))*((1)-((c)-(3))))))",
    "prune": "((2)/(a))"
}
